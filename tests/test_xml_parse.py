from oauth_cli.saml import AWSSTSGetCredentialsFromSAMLCommand

saml_response = ''


def test_parse():
    global saml_response
    command = AWSSTSGetCredentialsFromSAMLCommand()
    command.set_saml_response(saml_response)


if __name__ == '__main__':
    test_parse()
